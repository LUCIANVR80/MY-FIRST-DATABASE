-- MySQL Script generated by MySQL Workbench
-- Sat Mar 14 18:04:10 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema DB_Filme
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema DB_Filme
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `DB_Filme` DEFAULT CHARACTER SET utf8 ;
USE `DB_Filme` ;

-- -----------------------------------------------------
-- Table `DB_Filme`.`Actori`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DB_Filme`.`Actori` (
  `id_Actor` INT NOT NULL AUTO_INCREMENT,
  `Nume` VARCHAR(30) NOT NULL,
  `Prenume` VARCHAR(30) NOT NULL,
  `Data_Debut` DATE NOT NULL,
  `Venit_anual` FLOAT NULL,
  PRIMARY KEY (`id_Actor`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DB_Filme`.`Filme`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DB_Filme`.`Filme` (
  `Id_Film` INT NOT NULL AUTO_INCREMENT,
  `Data_lansare` DATE NOT NULL,
  `Titlu` VARCHAR(30) NOT NULL,
  `Gen` VARCHAR(20) NOT NULL,
  `Incasari` FLOAT NOT NULL,
  PRIMARY KEY (`Id_Film`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DB_Filme`.`Regizori`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DB_Filme`.`Regizori` (
  `Id_Regizor` INT NOT NULL AUTO_INCREMENT,
  `Nume` VARCHAR(30) NOT NULL,
  `Prenume` VARCHAR(45) NOT NULL,
  `An_debut` DATE NOT NULL,
  `Premii` INT NULL,
  PRIMARY KEY (`Id_Regizor`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DB_Filme`.`Filme`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DB_Filme`.`Filme` (
  `Id_Film` INT NOT NULL AUTO_INCREMENT,
  `Data_lansare` DATE NOT NULL,
  `Titlu` VARCHAR(30) NOT NULL,
  `Gen` VARCHAR(20) NOT NULL,
  `Incasari` FLOAT NOT NULL,
  PRIMARY KEY (`Id_Film`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DB_Filme`.`Distributie`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DB_Filme`.`Distributie` (
  `id_Actor` INT NOT NULL AUTO_INCREMENT,
  `Rol` VARCHAR(30) NOT NULL,
  `Actori_id_Actor` INT NOT NULL,
  `Filme_Id_Film` INT NOT NULL,
  PRIMARY KEY (`id_Actor`),
  INDEX `fk_Distributie_Actori_idx` (`Actori_id_Actor` ASC) VISIBLE,
  INDEX `fk_Distributie_Filme1_idx` (`Filme_Id_Film` ASC) VISIBLE,
  CONSTRAINT `fk_Distributie_Actori`
    FOREIGN KEY (`Actori_id_Actor`)
    REFERENCES `DB_Filme`.`Actori` (`id_Actor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Distributie_Filme1`
    FOREIGN KEY (`Filme_Id_Film`)
    REFERENCES `DB_Filme`.`Filme` (`Id_Film`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DB_Filme`.`Regie_film`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DB_Filme`.`Regie_film` (
  `Id_Regizor` INT NOT NULL AUTO_INCREMENT,
  `Id_Film` INT NOT NULL,
  `Filme_Id_Film` INT NOT NULL,
  `Regizori_Id_Regizor` INT NOT NULL,
  PRIMARY KEY (`Id_Regizor`),
  INDEX `fk_Regie_film_Filme1_idx` (`Filme_Id_Film` ASC) VISIBLE,
  INDEX `fk_Regie_film_Regizori1_idx` (`Regizori_Id_Regizor` ASC) VISIBLE,
  CONSTRAINT `fk_Regie_film_Filme1`
    FOREIGN KEY (`Filme_Id_Film`)
    REFERENCES `DB_Filme`.`Filme` (`Id_Film`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Regie_film_Regizori1`
    FOREIGN KEY (`Regizori_Id_Regizor`)
    REFERENCES `DB_Filme`.`Regizori` (`Id_Regizor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
SELECT * FROM actori;







UPDATE filme SET Titlu='Avatar'
WHERE Id_Film=1;
UPDATE filme SET Gen='SF'
WHERE Id_Film=1;
SELECT * FROM regizori;
SELECT * FROM filme;
SELECT * FROM distributie;
INSERT INTO regizori VALUES
     (6,'Puiu', 'Cristian', '1998-09-08',8);
CREATE TABLE Actors LIKE Actori;     
INSERT INTO actori VALUES
        (1, 'Worthington', 'Sam', '2000-04-05' , '12000000'),
        (2, 'Crowe', 'Rusell', '1986-03-07', '134000000'),
         (3, 'Di Caprio', 'Leonardo', '1993-06-08', '145000000'),
         (4, 'Cruise', 'Tom', '1981-03-01', '165000000'),
         (5, 'Bogart','Humphrey', '1930-08-03', 1450000)
         ;
INSERT INTO regizori VALUES
         (1, 'Cameron', 'James', '1977-05-09', 35),
          (2, 'Scott', 'Ridley', '1978-08-09', 25),
          (3, 'Scorsese', 'Martin', '1967-08-03', 28),
          (4, 'Kurtzman', 'Alex', '1997-06-05', 10),
          (5, 'Hawks', 'Howard',  '1928-03-07', 8);
INSERT INTO filme VALUES
          (1, '1997-11-01', 'Titanic', 'Drama', '1843201268' ),
          (2, '2000-05-01', 'Gladiator', 'Istoric', '24600000'),
          (3, '2013-12-17', 'The wolf of Wall Street','Comedie', '275000000'),
          (4, '2017-05-16', 'The Mummy','Aventura', '140000000'),
          (5, '1946-02-09', 'The Big Sleep', 'Politist', '3493000');
          
        INSERT INTO distributie VALUES
                    (1, 'Jake Sully', 1,1),
                    (2, 'Maximus Decimus Meridius', 2,2),
                    (3,'Jordan Belfort', 3,3),
                    (4,'Nick Morton', 4,4),
                    (5,'Philip Marlowe',5,5);
	INSERT INTO regie_film VALUES
             (1,1,1,1),
             (2,2,2,2),
             (3,3,3,3),
             (4,4,4,4),
             (5,5,5,5);
             
     ALTER TABLE filme RENAME TO movies;
     ALTER TABLE movies RENAME TO filme;
     ALTER TABLE regizori
     MODIFY COLUMN Premii VARCHAR(20);
     ALTER TABLE regizori
     MODIFY COLUMN Premii INT;
     ALTER TABLE filme 
     ADD COLUMN premii INT;
     ALTER TABLE filme
     DROP COLUMN premii;
     ALTER TABLE regizori
     ADD CONSTRAINT UNIQUE(Nume);
     UPDATE regizori
     SET Nume= 'Johnson' WHERE Id_Regizor=4;
     UPDATE filme
     SET Titlu='The Shining'
     WHERE Id_Film=3;
     UPDATE regizori
     SET Nume= 'Kurtzman' WHERE Id_Regizor=4;
     UPDATE filme
     SET Titlu='The Wolf of Wall Street'
     WHERE Id_Film=3;
     DELETE FROM regizori
     WHERE Id_Regizor='6';
     DROP TABLE Actors;
     
     SELECT * FROM regizori
     WHERE An_Debut<'1977-01-02'
     ORDER BY Nume,Prenume ASC;
     
     SELECT * FROM actori
     WHERE Venit_anual>1500000
     ORDER BY Nume,Prenume ASC;
     
  SELECT * FROM actori
  ORDER BY Venit_anual DESC LIMIT 1;
     
 SELECT SUM(Incasari)FROM filme;
     
SELECT *FROM actori
WHERE Id_Actor IN(
SELECT Id_Actor FROM distributie);

          SELECT * FROM filme
           WHERE Id_Film IN(
           SELECT Id_Film FROM filme
           WHERE Titlu=(SELECT Titlu FROM filme
           WHERE Id_Film=2));
           
         
	
	     
         SELECT CONCAT
         (a.nume,a.prenume)AS Nume_actor,a.Venit_anual,
         b.Titlu,b.Gen,b.Incasari FROM actori a JOIN filme b
         HAVING MAX(
         a.Venit_anual);
         
         SELECT CONCAT (a.Nume,a.Prenume)AS nume_regizor,
         a.Premii,b.Id_Film FROM regizori a
         INNER JOIN regie_film b ON a.Id_Regizor=b.Id_Regizor
         WHERE a.Premii>10;
         
         SELECT a.Titlu,a.Gen, a.Incasari,b.rol
         FROM filme a INNER JOIN distributie b
         ON a.Id_film=b.Filme_Id_Film
         WHERE a.Incasari>2500000
         ORDER BY a.Incasari ASC;
         
         
		        
		 CREATE VIEW Incasari_rol AS
         SELECT a.Titlu,a.Gen, a.Incasari,b.rol
         FROM filme a INNER JOIN distributie b
         ON a.Id_film=b.Filme_Id_Film
         WHERE a.Incasari>2500000
         ORDER BY a.Incasari ASC; 
        
         SELECT * FROM Incasari_rol;
         
		 CREATE OR REPLACE VIEW Incasari_rol
         AS SELECT a.Titlu,a.Gen, a.Incasari,b.rol, b.id_Actor
         FROM filme a INNER JOIN distributie b
         ON a.Id_film=b.Filme_Id_Film
         WHERE a.Incasari>2500000
         ORDER BY a.Incasari ASC;
		 
         
                 
		 CREATE VIEW Regizori_premiati AS
         SELECT CONCAT (a.Nume,a.Prenume)AS nume_regizor,
         a.Premii,b.Id_Film FROM regizori a
         INNER JOIN regie_film b ON a.Id_Regizor=b.Id_Regizor
         WHERE a.Premii>10;
		
		 SELECT * FROM Incasari_rol;
         SELECT * FROM Regizori_premiati;
         
         CREATE OR REPLACE VIEW Regizori_premiati AS
         SELECT CONCAT (a.Nume,a.Prenume)AS nume_regizor,
         a.Premii,a.An_debut,b.Id_Film FROM regizori a
         INNER JOIN regie_film b ON a.Id_Regizor=b.Id_Regizor
         WHERE a.Premii>10;
         
         
		 UPDATE Regizori_premiati SET An_debut='1980-09-08'
         WHERE Id_Film='2';
          
          
         CREATE VIEW Info_actori AS
         SELECT Nume,Prenume,Venit_anual FROM actori;
	
         SELECT * FROM Info_actori;
         
         INSERT INTO Info_actori (Nume,Prenume,Venit_Anual)                        
         VALUES('Pitt', 'Brad', '123450000');
                     